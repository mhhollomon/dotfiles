# Some applications read the EDITOR variable to determine your favourite text
# editor. So uncomment the line below and enter the editor of your choice :-)
export EDITOR=/usr/bin/vim


#
# Set up common aliases and environment variables
#

IGNOREEOF=3

export TERM=xterm-256color

#
# Platform specific setup
#

# Save path so, if we re-run ourselves, the path doesn't get needlessly long

if [ "${SAVED_PATH:-==Unset==}" = "==Unset==" ]; then
    export SAVED_PATH="${PATH}"
else
    export PATH="${SAVED_PATH}"
fi

# Some systems have less, some don't - if we don't, just use more

if ( type less > /dev/null 2>&1 ); then
    export LESS="-ImRs"
    export PAGER="less"
else
    alias less="more"
    export MORE="-is"
fi

# For 'ls', use colors if we have them (and use LS_OPTIONS if it exists)

if [ $(uname -s) = "Linux" -a -f /etc/SuSE-release ]; then
    if [ "${LS_OPTIONS}" != "" ]; then
	export LS_OPTIONS="${LS_OPTIONS} -p"
    else
	alias ls="ls -N --color=tty -T 0 -p"
    fi
else
    alias ls="ls -p"
fi

# Generic settings by O/S

export PATH=/usr/local/bin:$PATH

if [ -d "$HOME/bin" ]; then
   export PATH=$HOME/bin:$PATH
fi

case `uname -s` in

    Darwin)
	alias ps-scx="ps -ef | grep cim"
	alias users="users | tr ' ' \"\n\" | sort -u | tr \"\n\" ' '; echo"
	;;

    HP-UX)
	alias users="users | tr ' ' \"\n\" | sort -u | tr \"\n\" ' '; echo"

	export PATH=/opt/java1.5/bin:$PATH
	export UNIX_STD=2003

        # HP utilities are very sensitive to locale, and some don't work with utf8
        LANG=C
        export LANG

        # Be sure we have correct version of 'make'
        if [ ! -f ~/bin/make ]; then
            mkdir -p ~/bin
            ln -s /usr/local/bin/gmake ~/bin/make
        fi
        export PATH=~/bin:$PATH
	;;

    Linux)
	# alias ps-scx="ps aux | egrep \"cim|scx\""
	alias users="users | tr ' ' \"\n\" | sort -u | tr \"\n\" ' '; echo"
	export PATH=$PATH:/usr/sbin

	export PS1="\u:\W> "
	;;

    *)
	;;
esac

# If ccache is installed, then add it to head of path
# (easiest way for cmake to use it without command line options)

if [ -d /usr/lib64/ccache ]; then
   export PATH="/usr/lib64/ccache:$PATH"
fi

#
# Support for go (language)
#

if [ -d "${HOME}/golang" ]; then
    export PATH="${HOME}/golang/bin:$PATH"
fi

if [ -d "${HOME}/go" ]; then
    export PATH="${HOME}/go/bin:$PATH"
fi
#
# Support for some scoop related items when running under cygwin
#
if [ $(uname -s) = "CYGWIN_NT-10.0" ]; then
    if [ -d "/cygwin/c/scoop/shims" ]; then
        export PATH="$PATH:/cygwin/c/scoop/shims"
    fi
fi

if [ -d "${HOME}/.linuxbrew" ]; then
    # needs to go on front since we want to override
    # vendor supplied packages
    export PATH="${HOME}/.linuxbrew/bin:${PATH}"
    export MANPATH="$(brew --prefix)/share/man:$MANPATH"
    export INFOPATH="$(brew --prefix)/share/info:$INFOPATH"
fi
#
# Functions
#

# Function: global_find
#
# Search for a string globally throughout a directory structure
#
# Parameters:
#   String to search	(Typically quoted) String to search for
#   Search Path		Directory search path to begin searching at

global_find_usage()
{
    echo "Usage: global_find <search-string> <search-path>" 1>&2
}

global_find()
{
    if [ -z "${1}" -o -z "${2}" ]; then
	global_find_usage
	return 1;
    fi

    echo "Starting search for string \"$1\" in file path \"$2\" ..."

    # Only Linux appears to have '-0' for xargs ...
    if [ $(uname -s) = "Linux" ]; then
	find $2 -type f -print0 | xargs -0 grep -i "$1"
    else
	find $2 -type f | xargs grep -i "$1"
    fi
}

if [ -f ~/.bashrc ]; then . ~/.bashrc; fi

# only do this if we are interactive
case "$-" in
    *i*) (cd ~/.cfg; git pull --recurse)
        ;;
esac
