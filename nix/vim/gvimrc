"
" Set the font based on the type of
" system we think we are running on and
" the resolution of the X display if
" appropriate.
"
if has('unix')
    let s:resolution = '0x0'
    if executable("xdpyinfo")
        let s:resolution = system("xdpyinfo | awk '/resolution/ { printf(\"%s\", $2); }'")
    endif

    let s:big_font = 'Hack 15, Source Code Pro 17'
    if s:resolution == "160x160"
        let s:sml_font = 'Hack 12, Source Code Pro 12'
    else
        let s:sml_font = 'Hack 10, Source Code Pro 10'
    endif
else
    let s:big_font = "Consolas:h12:cANSI:qDRAFT"
    let s:sml_font = "Consolas:h9:cANSI:qDRAFT"
endif

let &guifont=s:sml_font

" hide the menu and toolbar by default
set guioptions-=m
set guioptions-=T

" but give ourselves a way to get them back
map ,gm :if &go=~#'m'<Bar>set go-=m<Bar>else<Bar>set go+=m<Bar>endif<CR>
map ,gt :if &go=~#'T'<Bar>set go-=T<Bar>else<Bar>set go+=T<Bar>endif<CR>

" Try to use true color if we can
if exists('+termguicolors')
  let &t_8f = "\<Esc>[38;2;%lu;%lu;%lum"
  let &t_8b = "\<Esc>[48;2;%lu;%lu;%lum"
  set termguicolors
endif

"
" Set things up a little more comfortably when working remotely
"
let s:remote_mode = 0
function! ToggleRemoteMode()
   if s:remote_mode == 0
      let s:remote_mode = 1
      let &guifont=s:big_font
   else
      let s:remote_mode = 0
      let &guifont=s:sml_font
   endif
endfunction
nnoremap ,rem :call ToggleRemoteMode()<CR>
