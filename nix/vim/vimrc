let mapleader = ","

"Tab Stop handling
set tabstop=4 softtabstop=4 expandtab shiftwidth=4 smarttab shiftround

" line numbering is on. don't use relative line numbers,
" use 5 columns for line numbers
set number norelativenumber numberwidth=5

" Allow buffers to be open and windowless, even if changed.
set hidden

"Turn off the mouse
set mouse=

" Let the plugins highlight, etc
syntax on
filetype plugin indent on

" Markdown
" textwrapping
autocmd FileType markdown set textwidth=79 formatoptions+=t


if ! has('gui_running')
    set t_Co=256
endif

" Toggle paste mode
nnoremap <leader>pp :set paste!<CR>


" Allow status lines to be selected or hidden (show by default)
let s:hidden_all = 0
function! ToggleHiddenAll()
    if s:hidden_all  == 0
        let s:hidden_all = 1
        set noshowmode
        set noruler
        set laststatus=0
        set noshowcmd
    else
        let s:hidden_all = 0
        set showmode
        set ruler
        set laststatus=2
        set showcmd
    endif
endfunction

nnoremap <S-h> :call ToggleHiddenAll()<CR>

" Be sure these match the ones above
set showmode
set ruler
set laststatus=2
set showcmd

" Move a line down in the file
noremap - ddp
" Move a line up in the file
noremap _ ddkP

" Make it super easy to edit .vimrc
noremap <leader>vim :tabnew $MYVIMRC<cr>
noremap <leader>sv :source $MYVIMRC<cr>

" NERDTree support
map <C-o> :NERDTreeToggle<CR>

" Buffer navigation
noremap <C-n> :bn<CR>
noremap <C-p> :bp<CR>

" Move to the next buffer and close the one we started on.
nnoremap <C-w>d :bn<CR>:bd#<CR>

" Fancy version of the above
nnoremap <C-w>! <Plug>Kwbd

" Toggle line numbers
nnoremap <leader>nn :set number!<cr>

" window nav
" from: https://robots.thoughtbot.com/vim-splits-move-faster-and-more-naturally 
nnoremap <C-j> <C-W><C-J>
nnoremap <C-k> <C-W><C-K>
nnoremap <C-l> <C-W><C-L>
nnoremap <C-h> <C-W><C-H>

" Tab Nav
if has('gui_running')
    nnoremap Ã° <C-PageUp>
    nnoremap Ã® <c-PageDown>
else
    nnoremap p <C-PageUp>
    nnoremap n <c-PageDown>
endif

" Set the color scheme
colorscheme onehalf

" lightline config
let g:lightline = {
   \ 'colorscheme' : 'solarized'
   \ }

" cmake
if executable("cmake")
    packadd vim-cmake
endif
